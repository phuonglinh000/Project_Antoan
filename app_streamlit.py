import streamlit as st
from utils import make_secret_key, read_key_from_file, create_hmac, verify_hmac
from sign import sign_image
from verifier import verify_image_signature, extract_signature

# Giao di·ªán Streamlit
st.title("WATETMARK & HMAC")

# Tab ƒëi·ªÅu h∆∞·ªõng
tab1, tab2, tab3 = st.tabs(["T·∫°o ch·ªØ k√Ω", "X√°c minh ·∫£nh", "Xem watermark"])

with tab1:
    st.header("‚úçÔ∏è T·∫°o ch·ªØ k√Ω v√† nh√∫ng v√†o ·∫£nh")
    uploaded_file = st.file_uploader("Ch·ªçn ·∫£nh ƒë·ªÉ k√Ω", type=["png", "jpg", "jpeg"])
    data_text = st.text_input("Nh·∫≠p d·ªØ li·ªáu g·ªëc (Data)")

    if st.button("K√Ω ·∫£nh"):
        if uploaded_file and data_text:
            # L∆∞u ·∫£nh t·∫°m
            img_path = "images/uploaded.png"
            with open(img_path, "wb") as f:
                f.write(uploaded_file.getbuffer())

            # T·∫°o key n·∫øu ch∆∞a c√≥
            make_secret_key()
            key = read_key_from_file()
            signature = create_hmac(data_text, key)

            # Nh√∫ng ch·ªØ k√Ω
            signed_path = "images/signed.png"
            sign_image(img_path, signature, signed_path)

            st.success("‚úÖ ·∫¢nh ƒë√£ ƒë∆∞·ª£c k√Ω!")
            st.image(signed_path, caption="·∫¢nh ƒë√£ k√Ω")
        else:
            st.warning("‚ö†Ô∏è H√£y ch·ªçn ·∫£nh v√† nh·∫≠p d·ªØ li·ªáu.")

with tab2:
    st.header("üîç X√°c minh ch·ªØ k√Ω trong ·∫£nh")
    uploaded_signed = st.file_uploader("Ch·ªçn ·∫£nh ƒë√£ k√Ω", type=["png"], key="verify")
    data_input = st.text_input("Nh·∫≠p d·ªØ li·ªáu g·ªëc ƒë·ªÉ x√°c minh")

    if st.button("X√°c minh"):
        if uploaded_signed and data_input:
            img_path = "images/to_verify.png"
            with open(img_path, "wb") as f:
                f.write(uploaded_signed.getbuffer())

            result = verify_image_signature(img_path, data_input.encode("utf-8"))
            if result:
                st.success("‚úÖ Ch·ªØ k√Ω h·ª£p l·ªá: ·∫¢nh ch∆∞a b·ªã ch·ªânh s·ª≠a!")
            else:
                st.error("‚ùå Ch·ªØ k√Ω KH√îNG h·ª£p l·ªá: ·∫¢nh b·ªã ch·ªânh s·ª≠a ho·∫∑c sai kh√≥a.")
        else:
            st.warning("‚ö†Ô∏è H√£y t·∫£i ·∫£nh v√† nh·∫≠p d·ªØ li·ªáu.")

with tab3:
    st.header("üëÄ Xem n·ªôi dung watermark")
    uploaded_view = st.file_uploader("Ch·ªçn ·∫£nh ƒë√£ nh√∫ng watermark", type=["png"], key="view")

    if st.button("Xem watermark"):
        if uploaded_view:
            img_path = "images/to_view.png"
            with open(img_path, "wb") as f:
                f.write(uploaded_view.getbuffer())

            extracted = extract_signature(img_path)
            st.text_area("Watermark (Signature)", extracted, height=100)
        else:
            st.warning("‚ö†Ô∏è H√£y ch·ªçn ·∫£nh.")
